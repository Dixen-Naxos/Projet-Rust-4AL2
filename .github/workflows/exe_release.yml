name: Release

on:
  pull_request:
    branches: [ "main" ]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
  build:
    needs: tests
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout master Branch
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref_name }}
      - name: Build
        run: cargo build --verbose
      - name: Create Release
        id: nightly-snapshot
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: Release_${{ github.ref_name }}
          release_name: Release_${{ github.ref_name }}
          draft: false
          prerelease: false
  windows-msvc-release:
    needs: build
    name: release windows msvc
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@master
      - name: Build
        run: |
          cargo build --release
      - name: tar
        run: tar --directory=target/release -cf archive.tar.gz client.exe
      - name: upload
        run: |
          $id = gh api -H "Accept: application/vnd.github+json" /repos/Dixen-Naxos/Projet-Rust-4AL2/releases/tags/Release_${{ github.ref_name }} --jq .id
          curl --fail-with-body -sS  -X POST --data-binary "@archive.tar.gz" -H 'Content-Type: application/octet-stream' -H 'Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' "https://uploads.github.com/repos/Dixen-Naxos/Projet-Rust-4AL2/releases/$id/assets?name=client_${{ github.ref_name }}_x86_64-pc-windows-msvc.tar.gz"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  macos-arm-release:
    needs: build
    name: release mac os arm release
    runs-on: macos-12
    steps:
      - uses: actions/checkout@master
      - name: check toolchain
        run: rustup default
      - name: Build
        run: |
          rustup toolchain install stable-aarch64-apple-darwin
          rustup target add aarch64-apple-darwin
          cargo build --release --target aarch64-apple-darwin
      - name: tar
        run: tar --directory=target/aarch64-apple-darwin/release -cf archive.tar.gz client
      - name: upload
        run: |
          id=$(gh api -H "Accept: application/vnd.github+json" /repos/Dixen-Naxos/Projet-Rust-4AL2/releases/tags/Release_${{ github.ref_name }} --jq .id)
          curl --fail-with-body -sS  -X POST --data-binary @"archive.tar.gz" -H 'Content-Type: application/octet-stream' -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://uploads.github.com/repos/Dixen-Naxos/Projet-Rust-4AL2/releases/$id/assets?name=client_${{ github.ref_name }}_aarch64-apple-darwin.tar.gz"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
